  sonar-frontend:
    runs-on: Agent-1
    needs: trivy_fs_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install unzip (required for sonar-scanner)
        run: sudo apt-get update && sudo apt-get install -y unzip  

      - name: Cache SonarQube Scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: SonarQube Scan (client)
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: client
          args: >
            -Dsonar.projectKey=myorg_client
            -Dsonar.projectName=myorg_client
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  sonar-backend:
    runs-on: Agent-1
    needs: sonar-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install unzip (required for sonar-scanner)
        run: sudo apt-get update && sudo apt-get install -y unzip  

      - name: Cache SonarQube Scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: SonarQube Scan (api)
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: api
          args: >
            -Dsonar.projectKey=myorg_api
            -Dsonar.projectName=myorg_api
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
